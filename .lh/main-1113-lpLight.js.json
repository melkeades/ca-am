{
    "sourceFile": "main-1113-lpLight.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1699876971170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1699876971170,
            "name": "Commit-0",
            "content": "import './style.styl'\nimport '@chenfengyuan/datepicker/src/css/datepicker.css'\nimport gsap from 'gsap'\nimport ScrollTrigger from 'gsap/ScrollTrigger'\nimport Flip from 'gsap/Flip'\nimport Lenis from '@studio-freight/lenis'\nimport Swiper from 'swiper'\nimport { Navigation, Autoplay, EffectFade } from 'swiper/modules'\nimport 'swiper/css'\nimport 'swiper/css/effect-fade'\nimport $ from 'jquery'\nimport * as datepicker from '@chenfengyuan/datepicker'\n// import { Application, Assets, Sprite } from 'pixi.js'\n// import * as PIXI from 'pixi.js'\n\ngsap.registerPlugin(ScrollTrigger, Flip)\nconst mm = gsap.matchMedia()\n\nconst sel = (e) => document.querySelector(e)\nconst selAll = (e) => document.querySelectorAll(e)\n\nconst lenis = new Lenis()\n// function raf(time) {\n//   lenis.raf(time)\n//   requestAnimationFrame(raf)\n// }\n// requestAnimationFrame(raf)\n//\nlenis.on('scroll', ScrollTrigger.update)\n\ngsap.ticker.add((time) => {\n  lenis.raf(time * 1000)\n})\n\ngsap.ticker.lagSmoothing(0)\n\nconst globalStylesEmbed$ = sel('.global-styles')\nconst primColor = getComputedStyle(globalStylesEmbed$).getPropertyValue('color')\ndocument.querySelector(':root').style.setProperty('--primary-color', primColor, 'important')\n// const connectBtn$ = document.querySelector('.navbar .btn')\n// const connectLink$ = document.querySelector('.navbar__link--connect')\n// ;[connectBtn$, connectLink$].forEach((el) => {\n//   el.addEventListener('click', () => {\n//     // document.querySelector('.connect-mod__trigger').click()\n//   })\n// })\n\nswitch (sel('.page-wrapper').getAttribute('data-page')) {\n  case 'home':\n    home()\n    break\n  case 'canvas':\n    canvas()\n    break\n  case 'blog':\n    blog()\n    break\n  case 'blog-post':\n    blogPost()\n    break\n  case 'blog-post-new':\n    blogPostNew()\n    break\n  case 'news':\n    news()\n    break\n  case 'contest':\n    contest()\n    break\n  case 'lp':\n    lp()\n    break\n  case 'lp-light':\n    lpLight()\n    break\n  case 'lp-light-v2':\n    lpLightV2()\n    break\n  case '':\n    console.log('no data-page provided')\n    break\n  default:\n    console.log('unknown data-page')\n}\n\nfunction introSec() {\n  mm.add('(min-width: 992px)', () => {\n    const introCardStAnimation = ScrollTrigger.create({\n      animation: gsap.timeline().to('.intro-sec__card-wrap', { transform: 'translate(0%, -80%)' }),\n      trigger: '.intro-sec',\n      start: 'top bottom',\n      end: 'bottom top',\n      scrub: 1,\n    })\n  })\n}\nfunction blogIntroSec() {\n  mm.add('(min-width: 992px)', () => {\n    const introCardStAnimation = ScrollTrigger.create({\n      animation: gsap.timeline().to('.blog-post__intro-sec__card-wrap', { transform: 'translate(0%, calc(-50% - 150px))' }),\n      trigger: '.blog-post__intro-sec',\n      start: 'top bottom',\n      end: 'bottom top',\n      scrub: 1,\n    })\n  })\n}\nfunction lp() {\n  console.log(lpLightThem)\n\n  // const lpHero$ = sel('.lp-hero')\n  // const lpHeroInfo$ = sel('.lp-hero__info')\n  // const lpHeroTitle$ = sel('.lp-hero__title')\n  // const lpHeroSubtitle$ = sel('.lp-hero__subtitle')\n  // const lpHeroP$ = sel('.lp-hero__p')\n  // const lpHeroIntroTl = gsap\n  //   .timeline({ defaults: { ease: 'power4.out', duration: 1 } })\n  //   .from(lpHeroTitle$, { y: '100%' }, 0)\n  //   .from(lpHeroSubtitle$, { opacity: 0 }, 0.5)\n  //   .from(lpHeroP$, { opacity: 0 }, 0.8)\n  // ScrollTrigger.create({\n  //   animation: gsap.timeline().fromTo(lpHeroInfo$, { y: '30%' }, { y: '-40%' }),\n  //   trigger: lpHero$,\n  //   start: 'top top',\n  //   end: 'bottom top',\n  //   scrub: 1,\n  // })\n  // console.log(heroImgOpacity, bgImgOpacity, defaultImgOpacity)\n  // document.querySelector('.lp-hero__bg').style.opacity = defaultImgOpacity\n\n  mm.add('(min-width: 992px)', () => {\n    const featuresItem$a = selAll('.features-sec__item')\n    const featuresImg_ = 'features-sec__img'\n    const featuresImgWrap_ = 'features-sec__img-wrap'\n    const featuresInfo_ = 'features-sec__info'\n    featuresItem$a.forEach((item) => {\n      const img = item.querySelector('.' + featuresImg_)\n      const imgWrap = item.querySelector('.' + featuresImgWrap_)\n      const info = item.querySelector('.' + featuresInfo_)\n\n      const featuresScrollTl = gsap\n        .timeline({ defaults: { ease: 'power2.out', duration: 2 } })\n        .to(imgWrap, { marginLeft: 80, marginRight: 80 }, '0')\n        .from(imgWrap, { width: '100%' }, '0')\n        .from(info, { opacity: 0, y: 100 }, '0')\n      ScrollTrigger.create({\n        animation: featuresScrollTl,\n        trigger: item,\n        start: 'top 80%',\n        duration: { min: 0.2, max: 1 },\n        toggleActions: 'play none none reverse',\n      })\n    })\n  })\n  // featured sec from homepage ---\n  const lpContentSec$a = selAll('.lp-content-sec--dark')\n  lpContentSec$a.forEach((item) => {\n    const lpContentBg$ = item.querySelector('.lp-content__bg-wrap')\n    const lpContentBgSt$ = item.querySelector('.lp-content__bg-anist')\n    gsap.set(lpContentBg$, { y: '-100%' })\n\n    const lpBgScTl = gsap.timeline({ defaults: { ease: 'none', duration: 1 } }).to(lpContentBgSt$, { y: '-100vh' }, 0)\n    const qwe = ScrollTrigger.create({\n      animation: lpBgScTl,\n      trigger: item,\n      start: 'top bottom',\n      end: 'bottom top',\n      scrub: true,\n      pin: lpContentBg$,\n      delay: 0.0,\n    })\n    item.querySelector('.pin-spacer').style.overflow = 'hidden'\n\n    // qwe.normalizeScroll(true)\n  })\n  // full width background section ---\n  const lpImgSec$a = selAll('.lp-bg-image-sec')\n  lpImgSec$a.forEach((item) => {\n    const lpImgBg$ = item.querySelector('.lp-bg-image__bg-img')\n    const lpImgBgSt$ = item.querySelector('.lp-bg-image__bg-img-anist')\n    const lpImgInfoIn$ = item.querySelector('.lp-bg-image__info-aniin')\n\n    const lpBgScTl = gsap\n      .timeline({ defaults: { ease: 'none', duration: 5 } })\n      .fromTo(lpImgBgSt$, { scaleY: '100%', transformOrigin: '0 bottom' }, { scaleY: '150%' }, 0)\n      .fromTo(lpImgInfoIn$, { y: '30vh' }, { y: '-30vh' }, 0)\n    // .from(lpImgInfoIn$, { opacity: 0, duration: 1 }, 1.2)\n    ScrollTrigger.create({\n      animation: lpBgScTl,\n      trigger: item,\n      start: 'top bottom',\n      end: 'bottom top',\n      scrub: true,\n    })\n  })\n}\nfunction lpLight() {\n  lpLightV2()\n}\nfunction lpLightV2() {\n  mm.add('(min-width: 992px)', () => {\n    const featuresItem$a = selAll('.features-sec__item')\n    const featuresImg_ = 'features-sec__img'\n    const featuresImgWrap_ = 'features-sec__img-wrap'\n    const featuresInfo_ = 'features-sec__info'\n    featuresItem$a.forEach((item) => {\n      const img = item.querySelector('.' + featuresImg_)\n      const imgWrap = item.querySelector('.' + featuresImgWrap_)\n      const info = item.querySelector('.' + featuresInfo_)\n\n      const featuresScrollTl = gsap\n        .timeline({ defaults: { ease: 'power2.out', duration: 2 } })\n        .to(imgWrap, { marginLeft: 80, marginRight: 80 }, '0')\n        .from(imgWrap, { width: '100%' }, '0')\n        .from(info, { opacity: 0, y: 100 }, '0')\n      ScrollTrigger.create({\n        animation: featuresScrollTl,\n        trigger: item,\n        start: 'top 80%',\n        duration: { min: 0.2, max: 1 },\n        toggleActions: 'play none none reverse',\n      })\n    })\n  })\n  // full width background section ---\n  const lpImgSec$a = selAll('.lp-bg-image-sec')\n  lpImgSec$a.forEach((item) => {\n    const lpImgBg$ = item.querySelector('.lp-bg-image__bg-img')\n    const lpImgBgSt$ = item.querySelector('.lp-bg-image__bg-img-anist')\n    const lpImgInfoIn$ = item.querySelector('.lp-bg-image__info-aniin')\n\n    const lpBgScTl = gsap\n      .timeline({ defaults: { ease: 'none', duration: 5 } })\n      .fromTo(lpImgBgSt$, { scaleY: '100%', transformOrigin: '0 bottom' }, { scaleY: '150%' }, 0)\n      .fromTo(lpImgInfoIn$, { y: '30vh' }, { y: '-30vh' }, 0)\n    // .from(lpImgInfoIn$, { opacity: 0, duration: 1 }, 1.2)\n    ScrollTrigger.create({\n      animation: lpBgScTl,\n      trigger: item,\n      start: 'top bottom',\n      end: 'bottom top',\n      scrub: true,\n    })\n  })\n  // parallax madness. madness? madness?! THIS IS AKM!!! ---\n  const stInit = (sectionClassName = '', elClassName = '', distance = 0, isBg = false) => {\n    const shift = isBg ? distance * -1 : distance\n    return ScrollTrigger.create({\n      animation: gsap.fromTo(elClassName, { y: shift }, { y: shift * -1, ease: 'none' }),\n      trigger: sectionClassName,\n      start: 'top bottom',\n      end: 'bottom top',\n      // markers: true,\n      scrub: true,\n      delay: 0.0,\n    })\n  }\n  const sec1 = '.lp-content-sec--blue'\n  stInit(sec1, '.features__cloud-1-st', 150, true)\n  stInit(sec1, '.features__cloud-2a-st', 250, true)\n  stInit(sec1, '.features__cloud-2b-st', 350, true)\n  const sec2 = '.lp-content-sec--2'\n  stInit(sec2, '.features__leaf-1-st', 600)\n  stInit(sec2, '.features__leaf-2-st', 70)\n  stInit(sec2, '.features__leaf-3-st', 150)\n  stInit(sec2, '.lp-content__tree-1-st', 120, true)\n  stInit(sec2, '.lp-content__tree-2-st', 200, true)\n  stInit(sec2, '.lp-content__tree-3-st', 170, true)\n}\nfunction contest() {\n  // console.log('co')\n  $('[data-toggle=\"datepicker\"]').datepicker({\n    format: 'mm-dd-yyyy',\n  })\n  // Available date placeholders:\n  // Year: yyyy\n  // Month: mm\n  // Day: dd\n  if (window.innerWidth < 768) {\n    $('[data-toggle=\"datepicker\"]').attr('readonly', 'readonly')\n  }\n}\n\nfunction canvas() {\n  console.log('canvas')\n\n  const canvasWrap$ = sel('.canvas-wrap')\n  let canvasWrapWidth = canvasWrap$.clientWidth\n  let canvasWrapHeight = canvasWrap$.clientHeight\n  const app = new PIXI.Application({\n    width: canvasWrapWidth,\n    height: canvasWrapHeight,\n    resolution: window.devicePixelRatio,\n    autoDensity: true,\n    antialias: true,\n    backgroundAlpha: 0,\n  })\n  canvasWrap$.appendChild(app.view)\n\n  // const svg = 'https://uploads-ssl.webflow.com/64b5d89ecbb311f07e71739b/64c4afa6434d9807c6f188a7_map-woDots-pos2.svg'\n  const svg = 'https://uploads-ssl.webflow.com/64b5d89ecbb311f07e71739b/64c5e88c111fbd713e2bc774_map-woDots-pos4096.svg'\n  // const svg = 'https://uploads-ssl.webflow.com/64b5d89ecbb311f07e71739b/64c5e28cf22c3195f7e614c7_map-woDots-pos9000-01.svg'\n  // const svg = 'https://uploads-ssl.webflow.com/64b5d89ecbb311f07e71739b/64c5e3610bcb95fd6720e36d_map-woDots-pos9000-01.webp'\n  const tex = PIXI.Texture.from(svg)\n  // const tex = PIXI.Texture.from(svg, { resourceOptions: { scale: 3 } })\n  const sprite = new PIXI.Sprite(tex)\n  const cont = new PIXI.Container()\n  cont.pivot.set(1, 0)\n  app.stage.addChild(cont)\n  sprite.scale.set(0.1)\n  sprite.anchor.set(1, 0)\n  sprite.position.set(canvasWrapWidth, 0)\n  cont.addChild(sprite)\n\n  app.ticker.stop()\n  gsap.ticker.add(() => {\n    // sprite.position.set(canvasWrapWidth, 0)\n    app.ticker.update()\n  })\n  let canvasSc = null\n  const canvasScInit = () => {\n    canvasSc = ScrollTrigger.create({\n      animation: gsap\n        .timeline({ defaults: { ease: 'none' } })\n        .to(sprite.scale, { x: 1, y: 1 }, 0)\n        .to(sprite, { y: -5400 }, 0)\n        .to(cont, { x: 1000 }),\n      pin: true,\n      trigger: '.canvas-wrap',\n      start: 'top top',\n      end: 'bottom+=1000 top',\n      scrub: 1,\n    })\n  }\n  canvasScInit()\n  window.addEventListener(\n    'resize',\n    debounce(() => {\n      canvasSc.kill()\n      canvasWrapWidth = canvasWrap$.clientWidth\n      canvasWrapHeight = canvasWrap$.clientHeight\n      app.renderer.resize(canvasWrapWidth, canvasWrapHeight)\n      sprite.position.set(canvasWrapWidth, 0)\n      canvasScInit()\n    })\n  )\n}\nfunction news() {\n  // const heroTitle$ = sel('.blog-hero__title')\n  // const heroBtn$ = sel('.blog-hero__info .btn-outline')\n  // const heroVideo$ = sel('.blog-hero__video')\n  // ;[heroTitle$, heroBtn$].forEach((el) => {\n  //   const rec = heroVideo$.getBoundingClientRect()\n  //   el.addEventListener('click', (e) => {\n  //     heroVideo$.click()\n  //   })\n  // })\n  const lightbox_ = '.w-lightbox-content.w-lightbox-group'\n  const lightboxStrip_ = '.w-lightbox-strip'\n  const sheet = new CSSStyleSheet()\n  sheet\n    .replace(`${lightbox_} { height: 100% !important; } ${lightboxStrip_} { display: none !important;}`)\n    .then((document.adoptedStyleSheets = [sheet]))\n    .catch((err) => {\n      console.error('Failed to replace styles:', err)\n    })\n}\nfunction blog() {\n  const heroImg = sel('.blog-hero__img')\n  const heroImgWrap = sel('.blog-hero__img-wrap')\n  const heroInfo = sel('.blog-hero__info')\n  const blogCard$a = selAll('.blog-card')\n  const blogItems = sel('.blog__items')\n  const filterSelect$ = sel('.filter-select__select')\n  filterSelect$.querySelector('option:first-child').setAttribute('selected', '')\n\n  let blogCardsTl = gsap\n    .timeline()\n    .from([blogCard$a[0], blogCard$a[1], blogCard$a[2]], { opacity: 0, y: 100, duration: 1, ease: 'power2.out', stagger: 0.15 }, 0)\n  mm.add('(min-width: 992px)', () => {\n    {\n      filterSelect$.setAttribute('multiple', '')\n\n      gsap\n        .timeline({ defaults: { ease: 'power4.out', duration: 3 } })\n        .fromTo('html', { '--blog-hero__img-outline-width': 'calc(100% - 300px)', duration: 1 }, { '--blog-hero__img-outline-width': '100%', duration: 1 }, 0)\n        .fromTo(heroImgWrap, { width: '100%' }, { width: 520 }, '-=1.4')\n        .from(heroInfo, { opacity: 0, y: 100 }, 0)\n\n      ScrollTrigger.create({\n        animation: blogCardsTl,\n        trigger: blogItems,\n        start: 'top center+=25%',\n      })\n    }\n  })\n  mm.add('(max-width: 991px)', () => {\n    filterSelect$.removeAttribute('multiple')\n  })\n\n  const filterCheckItem$a = selAll('.filter-check__item')\n\n  // filterCheckItem$a.forEach((el, i) => {\n  //   el.addEventListener('click', function (e) {\n  //     // event.preventDefault() // prevent double click trigger for checkboxes&radios\n  //     const filterInput = this.querySelector('input')\n  //     const filterValue = this.querySelector('span').textContent\n  //     if (!filterInput.checked) {\n  //       filterInput.checked = true\n  //       sel('.filter-select__select').value = filterValue != 'Show All' ? filterValue : ''\n  //       // sel('.filter-select__select').selectIndex = i\n  //       selAll('.filter-select__select>option')[i].dispatchEvent(new Event('change'))\n  //       sel('.filter-select__select').dispatchEvent(new Event('change'))\n  //       // console.log(selAll('.filter-select__select>option')[i], i)\n  //     }\n  //   })\n  // })\n  // filterCheckItem$a.forEach((el, i) => {\n  //   el.addEventListener('click', function (e) {\n  //     // event.preventDefault() // prevent double click trigger for checkboxes&radios\n  //     const filterInput = this.querySelector('input')\n  //     const filterValue = this.querySelector('span').textContent\n  //     if (!filterInput.checked) {\n  //       filterInput.checked = true\n  //       const $select = document.querySelector('.filter-select__select')\n  //       const $options = Array.from($select.options)\n  //       const optionToSelect = $options.find((item) => item.text === filterValue)\n  //       $select.value = optionToSelect.value\n  //       $select.focus()\n  //       $select.dispatchEvent(keyboardEvent)\n\n  //       $select.dispatchEvent(new Event('change'))\n\n  //       // sel('.filter-select__select').value = filterValue != 'Show All' ? filterValue : ''\n  //       // sel('.filter-select__select').selectIndex = i\n  //       selAll('.filter-select__select>option')[i].click()\n  //       selAll('.filter-select__select>option')[i].dispatchEvent(new Event('change'))\n  //       sel('.filter-select__select>option').click()\n  //       sel('.filter-select__select>option').dispatchEvent(new Event('change'))\n  //       // sel('.filter-select__select').dispatchEvent(new Event('change'))\n  //       // console.log(selAll('.filter-select__select>option')[i], i)\n  //     }\n  //   })\n  // })\n\n  // const filterAllCheckbox$ = sel('.filter-check__item--all>input')\n  // filterAllCheckbox$.setAttribute('disabled', '')\n  // selAll('.filter-check__item:not(.filter-check__item--all').forEach((el) => {\n  //   el.addEventListener('click', () => {\n  //     if (filterAllCheckbox$.checked) {\n  //       filterAllCheckbox$.checked = false\n  //       if (blogCardsTl.progress() !== 1) {\n  //         blogCardsTl.progress(1)\n  //       }\n  //     } else {\n  //       if (selAll('.filter-check__item>input:checked').length === 0) {\n  //         filterAllCheckbox$.checked = true\n  //       }\n  //     }\n  //   })\n  // })\n}\nfunction blogPost() {\n  console.log('blog post')\n  blogIntroSec()\n  const videoFrame = sel('.intro-sec__video iframe')\n  const blogPostIntroSec$ = sel('.blog-post__intro-sec-wrap')\n  if (!blogPostIntroSec$.classList.contains('w-condition-invisible')) {\n    const ytRegEx = /(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/\\s]{11})/gi\n    const ytId = ytRegEx.exec(videoFrame.src)[1]\n    const ytLink = `https://www.youtube.com/embed/${ytId}?controls=0&showinfo=0&rel=0&autoplay=1&loop=1&mute=1&playlist=${ytId}`\n    videoFrame.src = ytLink\n    console.log(ytLink)\n  }\n}\nfunction blogPostNew() {\n  // blogPost()\n  blogIntroSec()\n  const postBgWrap$ = sel('.post__bg-wrap')\n  const postBg$ = sel('.post__bg-st')\n\n  const postBgTl = gsap.timeline({ defaults: { ease: 'none', duration: 1 } }).fromTo(postBg$, { y: '0vh' }, { y: '-100vh' }, 0)\n  const postBgSt = ScrollTrigger.create({\n    animation: postBgTl,\n    trigger: '.page-wrapper',\n    start: 'top+=1 top',\n    // endTrigger: postBgWrap$,\n    end: 'bottom+=100px',\n    scrub: true,\n    // pin: postBg$,\n    // delay: 0.0,\n  })\n}\n\nfunction home() {\n  const heroBtn$ = sel('#aboutBtn')\n  const heroBg$ = sel('#aboutBg')\n  const heroClose$ = sel('#aboutX')\n  ;[heroClose$, heroBg$].forEach((el) => {\n    el.addEventListener('click', (e) => {\n      player.stopVideo()\n    })\n  })\n  heroBtn$.addEventListener('click', (e) => {\n    player.playVideo()\n  })\n\n  introSec()\n  const videoHero$ = sel('.video-hero')\n  const introSec$ = sel('.intro-sec')\n  const blogSec$ = sel('.home-blog-sec')\n  const mapSec$ = sel('.map-sec')\n  const featuresSec$ = sel('.features-sec')\n  let mapSwiper, blogSwiper\n\n  devMode(0)\n  function devMode(mode) {\n    if (mode === 0) {\n      return\n    } else if (mode === 1) {\n      let i = 0\n      document.querySelectorAll('[data-video-urls]').forEach((el) => {\n        el.querySelector('video').remove()\n        i++\n      })\n      console.log('devMode, removed videos:', i)\n    } else if (mode === 2) {\n      const devRemoveList = [videoHero$, introSec$, blogSec$]\n      devRemoveList.forEach((el) => {\n        el.remove()\n      })\n      // sel('.page-wrapper').style.paddingTop = '80vh'\n      console.log('devMode: removing sections')\n    }\n  }\n\n  const mapCardsWrapIn_ = '.map-sec__cards-wrapin' // swiper\n  const mapCards_ = '.map-sec__cards' // swiper-wrapper\n  const mapCardWrap_ = '.map-sec__card-wrap' // swiper-slide\n  const mapCardsWrapIn$ = sel(mapCardsWrapIn_) // swiper\n  const mapCardsWrapIn$a = selAll(mapCardsWrapIn_) // swiper\n  const mapCards$ = sel(mapCards_) // swiper-wrapper\n  const mapCardWrap$a = selAll(mapCardWrap_) // swiper-slide\n\n  const blogSlider$ = sel('.home-blog__items-wrap')\n  const blogWrapper$ = sel('.home-blog__items')\n  const blogCard$a = selAll('.home-blog-card')\n\n  const mapSec_ = 'map-sec'\n\n  const mapFg$ = sel('.map__fg')\n  const mapFgWrap$ = sel('.map__fg-wrap')\n  const mapBg$ = sel('.map__bg-img')\n  const mapBgWrap$ = sel('.map__bg-wrap')\n\n  const cardSpeed = 0.5\n  let mapCardInAni\n  let mapCardOutAni\n  let mapScrollInitTl\n\n  let mapScrollTl\n  const featuresItem$a = selAll('.features-sec__item')\n  const featuresImg_ = 'features-sec__img'\n  const featuresImgWrap_ = 'features-sec__img-wrap'\n  const featuresInfo_ = 'features-sec__info'\n  const aboutProgressBar$a = selAll('.progress-line__bar')\n\n  let introCardStAnimation, aboutStAnimation, mapStAnimation, mapInitStAnimation, featuresStAnimation, featuresScrollTl\n  let introCardStTl\n  let aboutStTl\n  let mapDotsObserver\n\n  mm.add('(min-width: 992px)', () => {\n    const cards = selAll('.home-blog-card')\n    aboutStTl = gsap\n      .timeline({ defaults: { duration: 3, ease: 'none' } })\n      .set('.home-blog-sec__bg-wrap', { clipPath: 'inset(50px round 25px)' })\n      .from('.home-blog-card', { y: 50 }, 0)\n      .to('.home-blog-sec__bg-wrap', { clipPath: 'inset(0px round 0px)' }, '<')\n      .to('.home-blog-sec__bg', { scale: 1.04 }, '<')\n    // .from('.home-blog__title', { opacity: 0, duration: 1 }, 0)\n    // .from('.home-blog__title', { opacity: 0 }, '<')\n\n    aboutStAnimation = ScrollTrigger.create({\n      animation: aboutStTl,\n      trigger: blogSec$,\n      start: 'top top',\n      end: 'bottom center',\n      pin: blogSec$,\n      scrub: 1,\n    })\n    if (blogSwiper) blogSwiper.destroy(true, true)\n    blogSlider$.classList.remove('swiper')\n    blogWrapper$.classList.remove('swiper-wrapper')\n    blogCard$a.forEach((el) => {\n      el.classList.remove('swiper-slide')\n    })\n    if (mapSwiper) mapSwiper.destroy(true, true)\n    mapCardsWrapIn$.classList.remove('swiper')\n    mapCards$.classList.remove('swiper-wrapper')\n    mapCardWrap$a.forEach((el) => {\n      el.classList.remove('swiper-slide')\n    })\n\n    mapCardInAni = (i) => {\n      if (elementInViewport('.' + mapSec_)) {\n        // prevent overlapping tweens on fast scroll (end/home on keyboard)\n        gsap.timeline().to(mapCardWrap$a[i], { opacity: 1, top: '50%', duration: cardSpeed })\n      }\n    }\n    mapCardOutAni = (i, scrollDirection = 'scrollingDown') => {\n      const direction = scrollDirection === 'scrollingUp' ? '55%' : '45%'\n      gsap.timeline().to(mapCardWrap$a[i], { opacity: 0, top: direction, duration: cardSpeed })\n    }\n    gsap.set(mapFg$, { x: '-10vw' })\n\n    mapScrollInitTl = gsap\n      .timeline({ defaults: { ease: 'none', duration: 5 } })\n      .to(mapFg$, { y: '-20vh' }, 0)\n      .to(mapBg$, { y: '-10vh' }, 0)\n      .to(mapFg$, { scale: 1.2 }, 0)\n      .to(mapBg$, { scale: 1.2 * 0.84 }, 0)\n      .to(\n        {},\n        {\n          onComplete: mapCardInAni,\n          onCompleteParams: [0],\n          onReverseComplete: mapCardOutAni,\n          onReverseCompleteParams: [0, 'scrollingUp'],\n          duration: 0.001,\n        },\n        3.5\n      )\n      .addLabel('mapIntroDone', '>')\n    const mapDuration = 15\n    const mapShift = 100\n    mapScrollTl = gsap\n      .timeline({ defaults: { ease: 'none', duration: 5 } })\n      .addLabel('card-a')\n      .to(mapFgWrap$, { y: -mapShift + 'vh', duration: mapDuration }, 0)\n      .to(mapBgWrap$, { y: -mapShift * 0.4 + 'vh', duration: mapDuration }, 0)\n      .to(\n        {},\n        {\n          onComplete: mapCardOutAni,\n          onCompleteParams: [0],\n          onReverseComplete: mapCardInAni,\n          onReverseCompleteParams: [0],\n          duration: 0.001,\n        },\n        2.5 // DO NOT OVERLAP EVENT TWEENS!!!\n      )\n      .set(selAll('.map-sec__card-wrapin')[0], { opacity: 0 }, 3.49)\n      .addLabel('card-b', 5)\n      .to(\n        {},\n        {\n          onComplete: mapCardInAni,\n          onCompleteParams: [1],\n          onReverseComplete: mapCardOutAni,\n          onReverseCompleteParams: [1, 'scrollingUp'],\n          duration: 0.001,\n        },\n        3.5\n      )\n      .to(\n        {},\n        {\n          onComplete: mapCardOutAni,\n          onCompleteParams: [1],\n          onReverseComplete: mapCardInAni,\n          onReverseCompleteParams: [1],\n          duration: 0.001,\n        },\n        7.5\n      )\n      .addLabel('card-c', 10)\n      .to(\n        {},\n        {\n          onComplete: mapCardInAni,\n          onCompleteParams: [2],\n          onReverseComplete: mapCardOutAni,\n          onReverseCompleteParams: [2, 'scrollingUp'],\n          duration: 0.001,\n        },\n        8.5\n      )\n      .to(\n        {},\n        {\n          onComplete: mapCardOutAni,\n          onCompleteParams: [2],\n          onReverseComplete: mapCardInAni,\n          onReverseCompleteParams: [2],\n          duration: 0.001,\n        },\n        14\n      )\n      .to('.map__bg-wrap', { opacity: 0, duration: 3 }, '10')\n\n    mapStAnimation = ScrollTrigger.create({\n      animation: mapScrollTl,\n      trigger: mapSec$,\n      start: 'top top',\n      end: 'bottom+=1000 top',\n      pin: '.map-sec__map-wrap',\n      scrub: 1,\n      snap: 'labelsDirectional',\n      duration: { min: 0.2, max: 1 },\n    })\n\n    mapCardWrap$a.forEach((el) => {\n      gsap.set(el, { opacity: 0, position: 'fixed', top: '55%', translateY: '-50%' })\n    })\n    mapInitStAnimation = ScrollTrigger.create({\n      animation: mapScrollInitTl,\n      trigger: mapSec$,\n      start: 'top 80%',\n      end: 'top top',\n      scrub: 1,\n      snap: 1,\n    })\n\n    featuresItem$a.forEach((item) => {\n      const img = item.querySelector('.' + featuresImg_)\n      const imgWrap = item.querySelector('.' + featuresImgWrap_)\n      const info = item.querySelector('.' + featuresInfo_)\n\n      featuresScrollTl = gsap\n        .timeline({ defaults: { ease: 'power2.out', duration: 2 } })\n        .to(imgWrap, { marginLeft: 80, marginRight: 80 }, '0')\n        .from(imgWrap, { width: '100%' }, '0')\n        .from(info, { opacity: 0, y: 100 }, '0')\n      featuresStAnimation = ScrollTrigger.create({\n        animation: featuresScrollTl,\n        trigger: item,\n        start: 'top 80%',\n        duration: { min: 0.2, max: 1 },\n        toggleActions: 'play none none reverse',\n      })\n    })\n  })\n\n  mm.add('(max-width: 991px)', () => {\n    blogSlider$.classList.add('swiper')\n    blogWrapper$.classList.add('swiper-wrapper')\n    blogCard$a.forEach((el) => {\n      el.classList.add('swiper-slide')\n    })\n    mapCardsWrapIn$.classList.add('swiper')\n    mapCards$.classList.add('swiper-wrapper')\n    mapCardWrap$a.forEach((el) => {\n      el.classList.add('swiper-slide')\n    })\n    blogSwiper = new Swiper('.home-blog__items-wrap', {\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      spaceBetween: 16,\n      // modules: [Autoplay],\n      speed: 1000,\n      autoplay: {\n        delay: 5000,\n        disableOnInteraction: false,\n      },\n    })\n    mapSwiper = new Swiper('.map-sec__cards-wrapin', {\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      spaceBetween: 20,\n      modules: [Autoplay],\n      speed: 1000,\n      autoplay: {\n        delay: 5000,\n        disableOnInteraction: false,\n      },\n    })\n  })\n}\n\nfunction elementInViewport(el) {\n  const element = el instanceof Element ? el : document.querySelector(el)\n  const bounding = element.getBoundingClientRect()\n  const elementHeight = element.offsetHeight\n  const elementWidth = element.offsetWidth\n  if (\n    bounding.top >= -elementHeight &&\n    bounding.left >= -elementWidth &&\n    bounding.right <= (window.innerWidth || document.documentElement.clientWidth) + elementWidth &&\n    bounding.bottom <= (window.innerHeight || document.documentElement.clientHeight) + elementHeight\n  ) {\n    return true\n  } else {\n    return false\n  }\n}\n\nfunction debounce(func, time = 100) {\n  let timer\n  return function (event) {\n    if (timer) clearTimeout(timer)\n    timer = setTimeout(func, time, event)\n  }\n}\n"
        }
    ]
}